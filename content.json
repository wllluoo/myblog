{"meta":{"title":"小陀螺的博客","subtitle":null,"description":null,"author":"wllluoo","url":"https://wllluoo.github.io/myblog"},"pages":[],"posts":[{"title":"aaas","slug":"test","date":"2018-01-30T16:08:44.000Z","updated":"2018-01-30T16:09:49.000Z","comments":true,"path":"2018/01/31/test/","link":"","permalink":"https://wllluoo.github.io/myblog/2018/01/31/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"特效：浏览器滚动时，文字滑入特效","slug":"hello-world","date":"2018-01-30T14:02:21.000Z","updated":"2018-02-17T14:33:49.000Z","comments":true,"path":"2018/01/30/hello-world/","link":"","permalink":"https://wllluoo.github.io/myblog/2018/01/30/hello-world/","excerpt":"","text":"1.首先要获取内容进入屏幕边缘的零界点 可以通过 滚轮移动端距离 + 浏览器窗口大小 &gt; 元素距离页面顶部的距离来进行判断。 监听浏览器滚动事件： 123456//给页面绑定滑轮滚动事件if (document.addEventListener) &#123;//firefox document.addEventListener('DOMMouseScroll', scrollFun, false);&#125;//滚动滑轮触发scrollFunc方法 //ie 谷歌window.onmousewheel = document.onmousewheel = scrollFun; 若是移动端还需加上：1document.addEventListener('scroll',scrollFun, false); 2.处理滚动事件：当元素进入浏览器边缘时，对该元素添加一个class，令其具有滑入的特效。因此给需要有滑入特效的元素事先增加自定义的class，以便选中。 1234function revealOnScroll() &#123; var scrolled = $(window).scrollTop(); // 获取滚动条移动的距离，即移动的位移 scrollFadeUpFun(scrolled, 'fade’); // 选中所有class为fade的元素 &#125; 3.获取浏览器高度：1var windowHeight = document.body.clientHeight; 4.操作元素：12345678910function scrollFadeUpFun(scrolled, element) &#123; $(\".\" + element).each(function() &#123; var $this = $(this), fadeOffsetTop = $this.offset().top; // 该元素在dom中距离顶部的距离 if (windowHeight + scrolled &gt; fadeOffsetTop) &#123; // 当 窗口高度 + 滚动的高度 &gt; 元素在dom中距离顶部的距离 即进入浏览器的下边缘时 $this.addClass('fade_up'); &#125; &#125;); &#125; 5.html中, 定义需滑入的元素1234&lt;div class='fade'&gt; &lt;p&gt;回顾所来径&lt;/p&gt; &lt;p&gt;苍苍横翠薇&lt;/p&gt;&lt;/div&gt; 6.给元素增加滑入渐变特效，如下所示，即元素的透明度从0.1变为1, 位置从80px还原为0px。12345678910111213元素自身样式 .fade &#123; display: block; transform: translateY(80px); opacity: 0.1; &#125; 定义滑入样式 .fade_up &#123; transform: translateY(0px); -webkit-transition: -webkit-transform .8s ease-out, opacity .8s ease-in; transition: transform .8s ease-out, opacity .8s ease-in-out; opacity: 1; &#125;","categories":[],"tags":[]}]}